generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Sex {
  Male
  Female
}

model UserType {
  id          String  @id @default(uuid())
  name        String  @unique
  description String
  status      Boolean @default(true)

  users User[]
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  birthDate DateTime
  sex       Sex
  phone     String   @db.VarChar(10)
  email     String   @unique
  password  String

  userType   UserType?      @relation(fields: [userTypeId], references: [id])
  userTypeId String?
  teams      UsersOnTeams[]
}

model Team {
  id           Int      @id @default(autoincrement())
  name         String
  description  String?
  img          String
  video        String
  status       Boolean  @default(true)
  registerDate DateTime @default(now())

  users UsersOnTeams[]
}

model UsersOnTeams {
  status       Boolean  @default(true)
  registerDate DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String
  team   Team   @relation(fields: [teamId], references: [id])
  teamId Int

  @@id([userId, teamId])
}

model Banner {
  id  Int    @id @default(autoincrement())
  url String

  competition   Competition @relation(fields: [competitionId], references: [id])
  competitionId String
}

model Competition {
  id               String   @id @default(uuid())
  name             String   @unique
  description      String
  place            String
  startDate        DateTime
  registerDeadline DateTime
  deadlineUpdate   DateTime
  status           Boolean  @default(true)

  banners Banner[]
}
